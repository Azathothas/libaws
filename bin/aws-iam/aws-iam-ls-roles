#!/usr/bin/env python3
import sys
import argh
import aws

def main(short=False, name=None):
    fail = True
    roles = [role for page in aws.client('iam').get_paginator('list_roles').paginate() for role in page['Roles']]
    for role in roles:
        if not name or name == role['RoleName']:
            fail = False
            print(role['RoleName'])
            if not short:
                print(' principal:', role['AssumeRolePolicyDocument']['Statement'][0]['Principal']['Service'])
                policies = [policy for page in aws.client('iam').get_paginator('list_attached_role_policies').paginate(RoleName=role['RoleName']) for policy in page['AttachedPolicies']]
                for policy in policies:
                    print(' policy:', policy["PolicyName"])
                role_policies = [policy for page in aws.client('iam').get_paginator('list_role_policies').paginate(RoleName=role['RoleName']) for policy in page['PolicyNames']]
                for policy in role_policies:
                    docs = aws.client('iam').get_role_policy(RoleName=role['RoleName'], PolicyName=policy)['PolicyDocument']['Statement']
                    for doc in docs:
                        for key in ['Action', 'Resource']:
                            if not isinstance(doc[key], list):
                                doc[key] = [doc[key]]
                        for action in doc['Action']:
                            for resource in doc['Resource']:
                                print(f' {doc["Effect"].lower()}: {action} {resource}')
                print()
    if fail:
        sys.exit(1)

if __name__ == '__main__':
    with aws.setup():
        argh.dispatch_command(main)
