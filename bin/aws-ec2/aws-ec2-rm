#!/usr/bin/env python3
import argh
import aws
import aws.ec2
import shell as sh
from util.retry import retry

def main(*selectors, yes=False):
    assert selectors, 'you cannot terminate all things, specify some selectors'
    assert selectors != ('*',), 'you cannot terminate all things, specify some selectors'
    pendings = aws.ec2.ls(selectors, 'pending')
    if pendings:
        print('wait for pending instances before terminate:')
        for pending in pendings:
            print('', aws.ec2.format(pending))
        sh.check_call('aws-ec2-wait-for-state -y', *[i.instance_id for i in pendings])
    instances = [i for i in aws.ec2.ls(selectors, None) if i.state['Name'] in ['running', 'stopped']]
    assert instances, 'didnt find any instances for those selectors'
    print('going to terminate the following instances:')
    for i in instances:
        print('', aws.ec2.format(i))
    if not yes:
        print('\nwould you like to proceed? y/n\n')
        assert sh.getch() == 'y', 'abort'
    retry(aws.client('ec2').terminate_instances)(InstanceIds=[i.instance_id for i in instances])

if __name__ == '__main__':
    with aws.setup():
        argh.dispatch_command(main)
