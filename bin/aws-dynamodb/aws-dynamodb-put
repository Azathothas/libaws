#!/usr/bin/env python3
import sys
import argh
import aws
from util.retry import retry

@argh.arg('--if-equals', nargs='*')
@argh.arg('--if-not-exists', nargs='*')
def main(table, *vals,
         if_equals: '0 or more equality conditions: $name:s|n|b:$value' = None, # type: ignore
         if_not_exists: '0 or more keys that must not exist for the provided value: $name' = None): # type: ignore
    """
    put item
    describe vals like: $name:s|n|b:$value

    >> aws-dynamodb-put test-table user:s:john
    """

    expected = {}

    for equal in if_equals or []:
        name, type, value = equal.split(':', 2)
        expected[name] = {
            'Value': {type.upper(): value},
            'ComparisonOperator': 'EQ',
        }

    for not_exist in if_not_exists or []:
        expected[not_exist] = {
            'Exists': False, # type: ignore
        }

    kw = {
        'TableName': table,
        'Item': {
            name: {type.upper(): value}
            for val in vals
            for name, type, value in [val.split(':', 2)]
        },
        'Expected': expected,
    }

    condition_failed = aws.client('dynamodb').exceptions.ConditionalCheckFailedException
    not_found = aws.client('dynamodb').exceptions.ResourceNotFoundException
    try:
        retry(aws.client('dynamodb').put_item, condition_failed, not_found)(**kw)
    except (condition_failed, not_found) as e:
        print(e)
        sys.exit(1)

if __name__ == '__main__':
    with aws.setup():
        argh.dispatch_command(main)
