#!/usr/bin/env python3
import util.exceptions
import json
import argh
import aws
import aws.lamda

def main(path):

    not_found = (
        aws.client('iam').exceptions.NoSuchEntityException,
        aws.client('lambda').exceptions.ResourceNotFoundException,
    )

    name = aws.lamda.name(path)
    print('name:', name)

    with util.exceptions.ignore(*not_found):
        policies = aws.client('iam').list_attached_role_policies(RoleName=name)['AttachedPolicies']
        if policies:
            print()
            print('attachments:')
            for policy in policies:
                print('', policy['PolicyName'])

    with util.exceptions.ignore(*not_found):
        policies = aws.client('iam').list_role_policies(RoleName=name)['PolicyNames']
        if policies:
            print()
            print('policies:')
            for policy in policies:
                print('', policy)
                print(util.strings.indent(json.dumps(aws.client('iam').get_role_policy(RoleName=name, PolicyName=policy)['PolicyDocument'], indent=2), 2))

    with util.exceptions.ignore(*not_found):
        policy = aws.client('iam').get_role(RoleName=name)['Role']["AssumeRolePolicyDocument"]
        print()
        print('relationships:')
        print(util.strings.indent(json.dumps(policy, indent=2), 2))

    with util.exceptions.ignore(*not_found):
        resp = json.loads(aws.client('lambda').get_policy(FunctionName=name)['Policy'])
        if resp:
            print()
            print('policy:')
            print(util.strings.indent(json.dumps(resp, indent=2), 2))

if __name__ == '__main__':
    with aws.setup():
        argh.dispatch_command(main)
