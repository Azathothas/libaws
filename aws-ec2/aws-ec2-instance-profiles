#!/usr/bin/env python3
import util.dicts
import argh
import boto3
import cli_aws
import pprint
import util.strings

def main(print_policies=False, name=None):
    for profile in boto3.client('iam').list_instance_profiles()['InstanceProfiles']:
        if not name or name == profile['InstanceProfileName']:
            print(profile['InstanceProfileName'], profile['Arn'])
            if print_policies:
                for role in profile['Roles']:
                    role_name = role['RoleName']
                    attached_role_policies = [policy
                                              for page in boto3.client('iam').get_paginator('list_attached_role_policies').paginate(RoleName=role_name)
                                              for policy in page['AttachedPolicies']]
                    role['AttachedPolicies'] = attached = []
                    for policy in attached_role_policies:
                        attached.append(policy)
                    role_policies = [policy
                                     for page in boto3.client('iam').get_paginator('list_role_policies').paginate(RoleName=role_name)
                                     for policy in page['PolicyNames']]
                    role['InlinePolicies'] = inline = []
                    for policy in role_policies:
                        policy = boto3.client('iam').get_role_policy(RoleName=role_name, PolicyName=policy)
                        inline.append(util.dicts.take(policy, ['PolicyDocument', 'PolicyName']))
                    print(util.strings.indent(pprint.pformat(role, width=120), len(role_name) + 1).lstrip())
                print()


if __name__ == '__main__':
    with cli_aws.setup():
        argh.dispatch_command(main)
