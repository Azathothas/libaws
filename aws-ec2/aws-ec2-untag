#!/usr/bin/env python3
import argh
import sys
import boto3
import shell
import cli_aws

def untag(ls_tags, unset_tags, yes=False, first_n=None, last_n=None):
    assert '=' not in unset_tags, 'no "=", just the name of the tag to unset'
    instances = _ls(tuple(ls_tags.split(',')), 'all', first_n, last_n)
    assert instances, 'didnt find any instances for those tags'
    logging.info('going to untag the following instances:')
    for i in instances:
        logging.info(' ' + _pretty(i))
    logging.info('with:')
    for x in unset_tags.split(','):
        logging.info(' ' + x)
    if is_cli and not yes:
        logging.info('\nwould you like to proceed? y/n\n')
        assert pager.getch() == 'y', 'abort'
    for i in instances:
        for t in unset_tags.split(','):
            _retry(i.create_tags)(Tags=[{'Key': t, 'Value': ''}])[0].delete()
            logging.info('untagged: %s', _pretty(i))

# def main(*selectors, state=None, all_tags=False):
#     instances = cli_aws.ls(selectors, state)
#     if not instances:
#         sys.exit(1)
#     else:
#         for instance in instances:
#             print(cli_aws.format(instance, all_tags))

if __name__ == '__main__':
    with cli_aws.setup():
        argh.dispatch_command(main)
