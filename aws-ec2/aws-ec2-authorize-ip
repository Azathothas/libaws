#!/usr/bin/env python3
import re
import shell
import logging
import util.strings
import argh
import cli_aws

def main(ip, *names, yes=False):
    assert all(x == '.' or x.isdigit() for x in ip), 'bad ip: %s' % ip
    names = [util.strings.rm_color(x) for x in names]
    sgs = cli_aws.sgs(names)
    assert sgs, 'didnt find any security groups'
    logging.info('going to authorize your ip %s to these groups:', util.colors.yellow(ip))
    for sg in sgs:
        logging.info(' %s [%s]', sg.group_name, sg.group_id)
    if not yes:
        logging.info('\nwould you like to authorize access to these groups for your ip %s? y/n\n', util.colors.yellow(ip))
        assert shell.getch() == 'y', 'abort'
    with open('/var/log/ec2_auth_ips.log', 'a') as f:
        f.write(ip + ' ' + ','.join(names) + '\n')
    for sg in sgs:
        try:
            sg.authorize_ingress(
                IpProtocol='tcp',
                FromPort=22,
                ToPort=22,
                CidrIp='%s/32' % ip
            )
            logging.info('authorized: %s %s %s', sg.group_name, sg.group_id)
        except Exception as e:
            logging.info('%s: %s %s %s', re.sub(r'.*\((.*)\).*', r'\1', str(e)), sg.group_name, sg.group_id)

if __name__ == '__main__':
    with cli_aws.setup():
        argh.dispatch_command(main)
