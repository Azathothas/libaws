#!/usr/bin/env python3
import logging
import argh
import sys
import cli_aws
import boto3

def main(name, *tags, id_only=False, most_recent=False):
    assert len(tags) in [0, 1], 'only one tag currently supported'
    if tags:
        tag_filter = [{'Name': 'tag:' + tags[0].split('=')[0], 'Values': [tags[0].split('=')[1]]}]
    else:
        tag_filter = []
    amis = boto3.resource('ec2').images.filter(
        Owners=['self'],
        Filters=[{'Name': 'name', 'Values': ['*%s*' % name]},
                 {'Name': 'state', 'Values': ['available']}] + tag_filter
    )
    amis = [x for x in amis if x.name.split('__')[0] == name]
    if not amis:
        logging.info('no amis matched name: %s %s', name, tags[0] if tags else '')
        sys.exit(1)
    amis = sorted(amis, key=lambda x: x.creation_date, reverse=True)
    if most_recent:
        amis = amis[:1]
    if id_only:
        return [ami.image_id for ami in amis]
    else:
        def f(ami):
            name, date = ami.name.split('__')
            description = ami.description if ami.description != name else '-'
            tag = '%(Key)s=%(Value)s' % ami.tags[0] if ami.tags else '-'
            return ' '.join([ami.image_id, date, description, tag])
        logging.info('id date description tag')
        return [f(ami) for ami in amis]

if __name__ == '__main__':
    with cli_aws.setup():
        argh.dispatch_command(main)
