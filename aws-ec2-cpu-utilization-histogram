#!/usr/bin/env python3.6
import collections
import argh
import aws_util
import shell
import util.iter

def main(*selectors, days=1, ids=False):
    prices = {k: float(v)
              for x in shell.check_output('aws-ec2-prices 2>/dev/null').splitlines()
              for k, v in [x.split()]}
    xs = [dict(zip(['name', 'id', 'type', 'billing', 'days', 'avg', 'max'], x.split()))
          for x in shell.check_output('aws-ec2-cpu-utilization', *selectors, '--days', days, '2>/dev/null').splitlines()]
    for k, vs in util.iter.groupby(xs, key=lambda x: x['billing']):
        print('\nbilling:', k)
        ys = util.iter.histogram(vs, size=2, exponential=True, key=lambda x: int(x['avg']), accumulate=True)
        for bucket, results in ys:
            lines = []
            lines.append(f'\n cpu percent: {bucket}%')
            price_per_month = 0
            for type, count in sorted(collections.Counter([x['type'] for x in results]).items(), key=lambda x: x[1]):
                price = prices[type] * 24 * 30 * count
                price_per_month += price
                lines.append(f'   {type} x{count} ${int(price)}/month')
                if ids:
                    lines[-1] += ','.join(x['id'] for x in results if x['type'] == type)
            lines[0] += f' ${int(price_per_month)}/month'
            print('\n'.join(lines))


if __name__ == '__main__':
    with aws_util.setup():
        argh.dispatch_command(main)
